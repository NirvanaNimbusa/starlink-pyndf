/* Declare/revert numerical error handling functions for alpha systems.	*/
/* This is the alpha_OSF1 version.
                                      */
#include <signal.h>
#include "sae_par.h"		 /* Standard SAE_ constants		    */
#include "prm_err.h"		 /* PRM_ error codes			    */

/* Global Variable Definitions:						    */
   volatile struct		 /* Fortran NUM_CMN common block.	    */
   {
      int num_error;		 /* Global numerical error status	    */
   } num_cmn_;


/*
*+
*  Name:
*     NUM_HANDL

*  Purpose:
*     Establish a handler for numerical errors.

*  Language:
*     C

*  Invocation:
*     CALL NUM_HANDL( ROUTIN )

*  Description:
*     This routine declares a signal handler to handle numerical errors
*     such as overflow or divide by zero.

*  Arguments:
*     ROUTIN = SUBROUTINE (Given)
*        The numerical error handler.  It should be declared as
*        EXTERNAL in the routine which calls NUM_HANDL. The routine
*        NUM_TRAP is provided for this purpose.

*  Machine-specific features used:
*     This routine is specific to alpha_OSF1 systems.

*  Copyright:
*     Copyright (C) 1991, 1993 Science & Engineering Research Council.
*     Copyright (C) 2002 Central Laboratory of the Research Councils.
*     All Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either version 2 of
*     the License, or (at your option) any later version.
*     
*     This program is distributed in the hope that it will be
*     useful,but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*     
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
*     02110-1301, USA

*  Authors:
*     RFWS: R.F. Warren-Smith (STARLINK, RAL)
*     AJC: A.J.Chipperfield (Starlink)
*     {enter_new_authors_here}

*  History:
*     12-FEB-1993 (DLT):
*        Original version from mips version by RFWS.
*     25-NOV-2002 (AJC):
*        Make it active
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}
*-
*/
   void num_handl_( void ( *routin )() )
   {
/* Set the signal handler for FP errors */
      signal( SIGFPE, routin );

/* Exit the routine.							    */
      return;
   }


/*
*+
*  Name:
*     NUM_REVRT

*  Purpose:
*     Revert to original numerical error behaviour.

*  Language:
*     C

*  Invocation:
*     CALL NUM_REVRT

*  Description:
*     This routine causes the handling of numerical errors to revert to
*     its original behaviour after a previous call to NUM_HANDL. Note
*     that although matching calls to NUM_HANDL and NUM_REVRT cancel,
*     they may not be nested.

*  Machine-specific features used:
*     This version is specific to DECstation (MIPS) systems.

*  Authors:
*     RFWS: R.F. Warren-Smith (STARLINK, RAL)
*     {enter_new_authors_here}

*  History:
*     30-OCT-1991 (RFWS):
*        Original version.
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-
*/
   void num_revrt_( void )
   {
/* Restore the default signal handler for FP errors */
      signal( SIGFPE, SIG_DFL );

/* Exit the routine.							    */
      return;
   }   

/*
*+
*  Name:
*     NUM_TRAP

*  Purpose:
*     Handle numerical errors.

*  Language:
*     C

*  Invocation:
*     CALL NUM_HANDL( NUM_TRAP )

*  Description:
*     This routine is intended to be passed to NUM_HANDL as a handler
*     for numerical errors. Once established, any numerical error will
*     be handled by this routine until NUM_REVRT is called. If the
*     global variable NUM_ERROR is set to SAI__OK, NUM_TRAP will set it
*     to a suitable error status value in response to the numerical
*     error, otherwise it will leave its value unchanged.

*  Arguments:
*     There is no need to refer to this routine's arguments in order to
*     use it.

*  Machine-specific features used:
*     This version is specific to Compaq TRU64 systems.

*  Authors:
*     RFWS: R.F. Warren-Smith (STARLINK, RAL)
*     AJC: A.J.Chipperfield (Starlink)
*     {enter_new_authors_here}

*  History:
*     4-NOV-1991 (RFWS):
*        Original version.
*     24-NOV-2002 (AJC):
*        Make it active
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}
*-
*/

   void num_trap_( int sig )
   {

/* Local Variables:							    */
      volatile int *num_error;	 /* Pointer to common block status variable */

/*.									    */
/* Obtain a pointer to the Fortran common block numerical error status	    */
/* variable.								    */
      num_error = &( num_cmn_.num_error );

/* If the numerical error status is not already set, set PRM_FPERR as we can't */
/* be more specific */
      if ( *num_error == SAI__OK )
        *num_error = PRM__FPERR; 

/* Exit the routine.							    */
      return;
   }
